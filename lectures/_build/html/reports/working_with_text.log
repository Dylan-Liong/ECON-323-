Traceback (most recent call last):
  File "c:\users\lenovo\anaconda3\envs\lecture-datascience\lib\site-packages\jupyter_cache\executors\utils.py", line 51, in single_nb_execution
    executenb(
  File "c:\users\lenovo\anaconda3\envs\lecture-datascience\lib\site-packages\nbclient\client.py", line 1087, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "c:\users\lenovo\anaconda3\envs\lecture-datascience\lib\site-packages\nbclient\util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "c:\users\lenovo\anaconda3\envs\lecture-datascience\lib\site-packages\nbclient\util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "c:\users\lenovo\anaconda3\envs\lecture-datascience\lib\asyncio\base_events.py", line 616, in run_until_complete
    return future.result()
  File "c:\users\lenovo\anaconda3\envs\lecture-datascience\lib\site-packages\nbclient\client.py", line 540, in async_execute
    await self.async_execute_cell(
  File "c:\users\lenovo\anaconda3\envs\lecture-datascience\lib\site-packages\nbclient\client.py", line 832, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "c:\users\lenovo\anaconda3\envs\lecture-datascience\lib\site-packages\nbclient\client.py", line 740, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply['content'])
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Match incidents to nearest forecast regions.
from shapely.geometry import Point, Polygon, shape
point = Point(incidents.latlon_filled[0][1],incidents.latlon_filled[0][0])
def distances(latlon):
    point=Point(latlon[1],latlon[0])
    df = pd.DataFrame.from_dict([{'id':feature['id'],
                                  'distance':shape(feature['geometry']).distance(point)} for
                                 feature in forecastregions['features']])
    return(df)
def foo(x):
    if (x[0]==None):
        return(None)
    d = distances(x)
    return(d.id[d.distance.idxmin()])
incidents['nearest_region'] = incidents.latlon_filled.apply(foo)
incidents['nearest_distance'] = incidents.latlon_filled.apply(lambda x: None if x[0]==None else distances(x).distance.min())
------------------

[1;31m---------------------------------------------------------------------------[0m
[1;31mModuleNotFoundError[0m                       Traceback (most recent call last)
[1;32m<ipython-input-12-8e2d160cf1a6>[0m in [0;36m<module>[1;34m[0m
[0;32m      1[0m [1;31m# Match incidents to nearest forecast regions.[0m[1;33m[0m[1;33m[0m[1;33m[0m[0m
[1;32m----> 2[1;33m [1;32mfrom[0m [0mshapely[0m[1;33m.[0m[0mgeometry[0m [1;32mimport[0m [0mPoint[0m[1;33m,[0m [0mPolygon[0m[1;33m,[0m [0mshape[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m      3[0m [0mpoint[0m [1;33m=[0m [0mPoint[0m[1;33m([0m[0mincidents[0m[1;33m.[0m[0mlatlon_filled[0m[1;33m[[0m[1;36m0[0m[1;33m][0m[1;33m[[0m[1;36m1[0m[1;33m][0m[1;33m,[0m[0mincidents[0m[1;33m.[0m[0mlatlon_filled[0m[1;33m[[0m[1;36m0[0m[1;33m][0m[1;33m[[0m[1;36m0[0m[1;33m][0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0;32m      4[0m [1;32mdef[0m [0mdistances[0m[1;33m([0m[0mlatlon[0m[1;33m)[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m      5[0m     [0mpoint[0m[1;33m=[0m[0mPoint[0m[1;33m([0m[0mlatlon[0m[1;33m[[0m[1;36m1[0m[1;33m][0m[1;33m,[0m[0mlatlon[0m[1;33m[[0m[1;36m0[0m[1;33m][0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m

[1;31mModuleNotFoundError[0m: No module named 'shapely'
ModuleNotFoundError: No module named 'shapely'

