Traceback (most recent call last):
  File "c:\users\lenovo\anaconda3\envs\lecture-datascience\lib\site-packages\jupyter_cache\executors\utils.py", line 51, in single_nb_execution
    executenb(
  File "c:\users\lenovo\anaconda3\envs\lecture-datascience\lib\site-packages\nbclient\client.py", line 1087, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "c:\users\lenovo\anaconda3\envs\lecture-datascience\lib\site-packages\nbclient\util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "c:\users\lenovo\anaconda3\envs\lecture-datascience\lib\site-packages\nbclient\util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "c:\users\lenovo\anaconda3\envs\lecture-datascience\lib\asyncio\base_events.py", line 616, in run_until_complete
    return future.result()
  File "c:\users\lenovo\anaconda3\envs\lecture-datascience\lib\site-packages\nbclient\client.py", line 540, in async_execute
    await self.async_execute_cell(
  File "c:\users\lenovo\anaconda3\envs\lecture-datascience\lib\site-packages\nbclient\client.py", line 832, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "c:\users\lenovo\anaconda3\envs\lecture-datascience\lib\site-packages\nbclient\client.py", line 740, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply['content'])
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
df1_url = "https://storage.googleapis.com/workshop_materials/df1.csv"
df1_web = pd.read_csv(df1_url, index_col=0)
df1_web.head()
------------------

[1;31m---------------------------------------------------------------------------[0m
[1;31mHTTPError[0m                                 Traceback (most recent call last)
[1;32m<ipython-input-14-91205a2232a9>[0m in [0;36m<module>[1;34m[0m
[0;32m      1[0m [0mdf1_url[0m [1;33m=[0m [1;34m"https://storage.googleapis.com/workshop_materials/df1.csv"[0m[1;33m[0m[1;33m[0m[0m
[1;32m----> 2[1;33m [0mdf1_web[0m [1;33m=[0m [0mpd[0m[1;33m.[0m[0mread_csv[0m[1;33m([0m[0mdf1_url[0m[1;33m,[0m [0mindex_col[0m[1;33m=[0m[1;36m0[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m      3[0m [0mdf1_web[0m[1;33m.[0m[0mhead[0m[1;33m([0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\anaconda3\envs\lecture-datascience\lib\site-packages\pandas\io\parsers.py[0m in [0;36mparser_f[1;34m(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, squeeze, prefix, mangle_dupe_cols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, dialect, error_bad_lines, warn_bad_lines, delim_whitespace, low_memory, memory_map, float_precision)[0m
[0;32m    674[0m         )
[0;32m    675[0m [1;33m[0m[0m
[1;32m--> 676[1;33m         [1;32mreturn[0m [0m_read[0m[1;33m([0m[0mfilepath_or_buffer[0m[1;33m,[0m [0mkwds[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    677[0m [1;33m[0m[0m
[0;32m    678[0m     [0mparser_f[0m[1;33m.[0m[0m__name__[0m [1;33m=[0m [0mname[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\anaconda3\envs\lecture-datascience\lib\site-packages\pandas\io\parsers.py[0m in [0;36m_read[1;34m(filepath_or_buffer, kwds)[0m
[0;32m    428[0m     [1;31m# though mypy handling of conditional imports is difficult.[0m[1;33m[0m[1;33m[0m[1;33m[0m[0m
[0;32m    429[0m     [1;31m# See https://github.com/python/mypy/issues/1297[0m[1;33m[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 430[1;33m     fp_or_buf, _, compression, should_close = get_filepath_or_buffer(
[0m[0;32m    431[0m         [0mfilepath_or_buffer[0m[1;33m,[0m [0mencoding[0m[1;33m,[0m [0mcompression[0m[1;33m[0m[1;33m[0m[0m
[0;32m    432[0m     )

[1;32m~\anaconda3\envs\lecture-datascience\lib\site-packages\pandas\io\common.py[0m in [0;36mget_filepath_or_buffer[1;34m(filepath_or_buffer, encoding, compression, mode)[0m
[0;32m    170[0m [1;33m[0m[0m
[0;32m    171[0m     [1;32mif[0m [0misinstance[0m[1;33m([0m[0mfilepath_or_buffer[0m[1;33m,[0m [0mstr[0m[1;33m)[0m [1;32mand[0m [0mis_url[0m[1;33m([0m[0mfilepath_or_buffer[0m[1;33m)[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 172[1;33m         [0mreq[0m [1;33m=[0m [0murlopen[0m[1;33m([0m[0mfilepath_or_buffer[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    173[0m         [0mcontent_encoding[0m [1;33m=[0m [0mreq[0m[1;33m.[0m[0mheaders[0m[1;33m.[0m[0mget[0m[1;33m([0m[1;34m"Content-Encoding"[0m[1;33m,[0m [1;32mNone[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0;32m    174[0m         [1;32mif[0m [0mcontent_encoding[0m [1;33m==[0m [1;34m"gzip"[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\anaconda3\envs\lecture-datascience\lib\site-packages\pandas\io\common.py[0m in [0;36murlopen[1;34m(*args, **kwargs)[0m
[0;32m    139[0m     [1;32mimport[0m [0murllib[0m[1;33m.[0m[0mrequest[0m[1;33m[0m[1;33m[0m[0m
[0;32m    140[0m [1;33m[0m[0m
[1;32m--> 141[1;33m     [1;32mreturn[0m [0murllib[0m[1;33m.[0m[0mrequest[0m[1;33m.[0m[0murlopen[0m[1;33m([0m[1;33m*[0m[0margs[0m[1;33m,[0m [1;33m**[0m[0mkwargs[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    142[0m [1;33m[0m[0m
[0;32m    143[0m [1;33m[0m[0m

[1;32m~\anaconda3\envs\lecture-datascience\lib\urllib\request.py[0m in [0;36murlopen[1;34m(url, data, timeout, cafile, capath, cadefault, context)[0m
[0;32m    220[0m     [1;32melse[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m    221[0m         [0mopener[0m [1;33m=[0m [0m_opener[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 222[1;33m     [1;32mreturn[0m [0mopener[0m[1;33m.[0m[0mopen[0m[1;33m([0m[0murl[0m[1;33m,[0m [0mdata[0m[1;33m,[0m [0mtimeout[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    223[0m [1;33m[0m[0m
[0;32m    224[0m [1;32mdef[0m [0minstall_opener[0m[1;33m([0m[0mopener[0m[1;33m)[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\anaconda3\envs\lecture-datascience\lib\urllib\request.py[0m in [0;36mopen[1;34m(self, fullurl, data, timeout)[0m
[0;32m    529[0m         [1;32mfor[0m [0mprocessor[0m [1;32min[0m [0mself[0m[1;33m.[0m[0mprocess_response[0m[1;33m.[0m[0mget[0m[1;33m([0m[0mprotocol[0m[1;33m,[0m [1;33m[[0m[1;33m][0m[1;33m)[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m    530[0m             [0mmeth[0m [1;33m=[0m [0mgetattr[0m[1;33m([0m[0mprocessor[0m[1;33m,[0m [0mmeth_name[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 531[1;33m             [0mresponse[0m [1;33m=[0m [0mmeth[0m[1;33m([0m[0mreq[0m[1;33m,[0m [0mresponse[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    532[0m [1;33m[0m[0m
[0;32m    533[0m         [1;32mreturn[0m [0mresponse[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\anaconda3\envs\lecture-datascience\lib\urllib\request.py[0m in [0;36mhttp_response[1;34m(self, request, response)[0m
[0;32m    638[0m         [1;31m# request was successfully received, understood, and accepted.[0m[1;33m[0m[1;33m[0m[1;33m[0m[0m
[0;32m    639[0m         [1;32mif[0m [1;32mnot[0m [1;33m([0m[1;36m200[0m [1;33m<=[0m [0mcode[0m [1;33m<[0m [1;36m300[0m[1;33m)[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 640[1;33m             response = self.parent.error(
[0m[0;32m    641[0m                 'http', request, response, code, msg, hdrs)
[0;32m    642[0m [1;33m[0m[0m

[1;32m~\anaconda3\envs\lecture-datascience\lib\urllib\request.py[0m in [0;36merror[1;34m(self, proto, *args)[0m
[0;32m    567[0m         [1;32mif[0m [0mhttp_err[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m    568[0m             [0margs[0m [1;33m=[0m [1;33m([0m[0mdict[0m[1;33m,[0m [1;34m'default'[0m[1;33m,[0m [1;34m'http_error_default'[0m[1;33m)[0m [1;33m+[0m [0morig_args[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 569[1;33m             [1;32mreturn[0m [0mself[0m[1;33m.[0m[0m_call_chain[0m[1;33m([0m[1;33m*[0m[0margs[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    570[0m [1;33m[0m[0m
[0;32m    571[0m [1;31m# XXX probably also want an abstract factory that knows when it makes[0m[1;33m[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\anaconda3\envs\lecture-datascience\lib\urllib\request.py[0m in [0;36m_call_chain[1;34m(self, chain, kind, meth_name, *args)[0m
[0;32m    500[0m         [1;32mfor[0m [0mhandler[0m [1;32min[0m [0mhandlers[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m    501[0m             [0mfunc[0m [1;33m=[0m [0mgetattr[0m[1;33m([0m[0mhandler[0m[1;33m,[0m [0mmeth_name[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 502[1;33m             [0mresult[0m [1;33m=[0m [0mfunc[0m[1;33m([0m[1;33m*[0m[0margs[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    503[0m             [1;32mif[0m [0mresult[0m [1;32mis[0m [1;32mnot[0m [1;32mNone[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m    504[0m                 [1;32mreturn[0m [0mresult[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\anaconda3\envs\lecture-datascience\lib\urllib\request.py[0m in [0;36mhttp_error_default[1;34m(self, req, fp, code, msg, hdrs)[0m
[0;32m    647[0m [1;32mclass[0m [0mHTTPDefaultErrorHandler[0m[1;33m([0m[0mBaseHandler[0m[1;33m)[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m    648[0m     [1;32mdef[0m [0mhttp_error_default[0m[1;33m([0m[0mself[0m[1;33m,[0m [0mreq[0m[1;33m,[0m [0mfp[0m[1;33m,[0m [0mcode[0m[1;33m,[0m [0mmsg[0m[1;33m,[0m [0mhdrs[0m[1;33m)[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 649[1;33m         [1;32mraise[0m [0mHTTPError[0m[1;33m([0m[0mreq[0m[1;33m.[0m[0mfull_url[0m[1;33m,[0m [0mcode[0m[1;33m,[0m [0mmsg[0m[1;33m,[0m [0mhdrs[0m[1;33m,[0m [0mfp[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    650[0m [1;33m[0m[0m
[0;32m    651[0m [1;32mclass[0m [0mHTTPRedirectHandler[0m[1;33m([0m[0mBaseHandler[0m[1;33m)[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m

[1;31mHTTPError[0m: HTTP Error 404: Not Found
HTTPError: HTTP Error 404: Not Found

