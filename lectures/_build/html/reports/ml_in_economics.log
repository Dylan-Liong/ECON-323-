Traceback (most recent call last):
  File "c:\users\lenovo\anaconda3\envs\lecture-datascience\lib\site-packages\jupyter_cache\executors\utils.py", line 51, in single_nb_execution
    executenb(
  File "c:\users\lenovo\anaconda3\envs\lecture-datascience\lib\site-packages\nbclient\client.py", line 1087, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "c:\users\lenovo\anaconda3\envs\lecture-datascience\lib\site-packages\nbclient\util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "c:\users\lenovo\anaconda3\envs\lecture-datascience\lib\site-packages\nbclient\util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "c:\users\lenovo\anaconda3\envs\lecture-datascience\lib\asyncio\base_events.py", line 616, in run_until_complete
    return future.result()
  File "c:\users\lenovo\anaconda3\envs\lecture-datascience\lib\site-packages\nbclient\client.py", line 540, in async_execute
    await self.async_execute_cell(
  File "c:\users\lenovo\anaconda3\envs\lecture-datascience\lib\site-packages\nbclient\client.py", line 832, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "c:\users\lenovo\anaconda3\envs\lecture-datascience\lib\site-packages\nbclient\client.py", line 740, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply['content'])
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import statsmodels.formula.api as smf
from statsmodels.iolib.summary2 import summary_col
# Download CPS data
cpsall = pd.read_stata("https://www.nber.org/morg/annual/morg18.dta")

# take subset of data just to reduce computation time
cps = cpsall.sample(30000, replace=False, random_state=0)
display(cps.head())
cps.describe()
------------------

[1;31m---------------------------------------------------------------------------[0m
[1;31mHTTPError[0m                                 Traceback (most recent call last)
[1;32m<ipython-input-3-1ecf4a2b16da>[0m in [0;36m<module>[1;34m[0m
[0;32m      2[0m [1;32mfrom[0m [0mstatsmodels[0m[1;33m.[0m[0miolib[0m[1;33m.[0m[0msummary2[0m [1;32mimport[0m [0msummary_col[0m[1;33m[0m[1;33m[0m[0m
[0;32m      3[0m [1;31m# Download CPS data[0m[1;33m[0m[1;33m[0m[1;33m[0m[0m
[1;32m----> 4[1;33m [0mcpsall[0m [1;33m=[0m [0mpd[0m[1;33m.[0m[0mread_stata[0m[1;33m([0m[1;34m"https://www.nber.org/morg/annual/morg18.dta"[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m      5[0m [1;33m[0m[0m
[0;32m      6[0m [1;31m# take subset of data just to reduce computation time[0m[1;33m[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\anaconda3\envs\lecture-datascience\lib\site-packages\pandas\io\stata.py[0m in [0;36mread_stata[1;34m(filepath_or_buffer, convert_dates, convert_categoricals, index_col, convert_missing, preserve_dtypes, columns, order_categoricals, chunksize, iterator)[0m
[0;32m    175[0m ):
[0;32m    176[0m [1;33m[0m[0m
[1;32m--> 177[1;33m     reader = StataReader(
[0m[0;32m    178[0m         [0mfilepath_or_buffer[0m[1;33m,[0m[1;33m[0m[1;33m[0m[0m
[0;32m    179[0m         [0mconvert_dates[0m[1;33m=[0m[0mconvert_dates[0m[1;33m,[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\anaconda3\envs\lecture-datascience\lib\site-packages\pandas\io\stata.py[0m in [0;36m__init__[1;34m(self, path_or_buf, convert_dates, convert_categoricals, index_col, convert_missing, preserve_dtypes, columns, order_categoricals, chunksize)[0m
[0;32m   1045[0m         [0mpath_or_buf[0m [1;33m=[0m [0mstringify_path[0m[1;33m([0m[0mpath_or_buf[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0;32m   1046[0m         [1;32mif[0m [0misinstance[0m[1;33m([0m[0mpath_or_buf[0m[1;33m,[0m [0mstr[0m[1;33m)[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[1;32m-> 1047[1;33m             [0mpath_or_buf[0m[1;33m,[0m [0mencoding[0m[1;33m,[0m [0m_[0m[1;33m,[0m [0mshould_close[0m [1;33m=[0m [0mget_filepath_or_buffer[0m[1;33m([0m[0mpath_or_buf[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m   1048[0m [1;33m[0m[0m
[0;32m   1049[0m         [1;32mif[0m [0misinstance[0m[1;33m([0m[0mpath_or_buf[0m[1;33m,[0m [1;33m([0m[0mstr[0m[1;33m,[0m [0mbytes[0m[1;33m)[0m[1;33m)[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\anaconda3\envs\lecture-datascience\lib\site-packages\pandas\io\common.py[0m in [0;36mget_filepath_or_buffer[1;34m(filepath_or_buffer, encoding, compression, mode)[0m
[0;32m    170[0m [1;33m[0m[0m
[0;32m    171[0m     [1;32mif[0m [0misinstance[0m[1;33m([0m[0mfilepath_or_buffer[0m[1;33m,[0m [0mstr[0m[1;33m)[0m [1;32mand[0m [0mis_url[0m[1;33m([0m[0mfilepath_or_buffer[0m[1;33m)[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 172[1;33m         [0mreq[0m [1;33m=[0m [0murlopen[0m[1;33m([0m[0mfilepath_or_buffer[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    173[0m         [0mcontent_encoding[0m [1;33m=[0m [0mreq[0m[1;33m.[0m[0mheaders[0m[1;33m.[0m[0mget[0m[1;33m([0m[1;34m"Content-Encoding"[0m[1;33m,[0m [1;32mNone[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0;32m    174[0m         [1;32mif[0m [0mcontent_encoding[0m [1;33m==[0m [1;34m"gzip"[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\anaconda3\envs\lecture-datascience\lib\site-packages\pandas\io\common.py[0m in [0;36murlopen[1;34m(*args, **kwargs)[0m
[0;32m    139[0m     [1;32mimport[0m [0murllib[0m[1;33m.[0m[0mrequest[0m[1;33m[0m[1;33m[0m[0m
[0;32m    140[0m [1;33m[0m[0m
[1;32m--> 141[1;33m     [1;32mreturn[0m [0murllib[0m[1;33m.[0m[0mrequest[0m[1;33m.[0m[0murlopen[0m[1;33m([0m[1;33m*[0m[0margs[0m[1;33m,[0m [1;33m**[0m[0mkwargs[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    142[0m [1;33m[0m[0m
[0;32m    143[0m [1;33m[0m[0m

[1;32m~\anaconda3\envs\lecture-datascience\lib\urllib\request.py[0m in [0;36murlopen[1;34m(url, data, timeout, cafile, capath, cadefault, context)[0m
[0;32m    220[0m     [1;32melse[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m    221[0m         [0mopener[0m [1;33m=[0m [0m_opener[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 222[1;33m     [1;32mreturn[0m [0mopener[0m[1;33m.[0m[0mopen[0m[1;33m([0m[0murl[0m[1;33m,[0m [0mdata[0m[1;33m,[0m [0mtimeout[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    223[0m [1;33m[0m[0m
[0;32m    224[0m [1;32mdef[0m [0minstall_opener[0m[1;33m([0m[0mopener[0m[1;33m)[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\anaconda3\envs\lecture-datascience\lib\urllib\request.py[0m in [0;36mopen[1;34m(self, fullurl, data, timeout)[0m
[0;32m    529[0m         [1;32mfor[0m [0mprocessor[0m [1;32min[0m [0mself[0m[1;33m.[0m[0mprocess_response[0m[1;33m.[0m[0mget[0m[1;33m([0m[0mprotocol[0m[1;33m,[0m [1;33m[[0m[1;33m][0m[1;33m)[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m    530[0m             [0mmeth[0m [1;33m=[0m [0mgetattr[0m[1;33m([0m[0mprocessor[0m[1;33m,[0m [0mmeth_name[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 531[1;33m             [0mresponse[0m [1;33m=[0m [0mmeth[0m[1;33m([0m[0mreq[0m[1;33m,[0m [0mresponse[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    532[0m [1;33m[0m[0m
[0;32m    533[0m         [1;32mreturn[0m [0mresponse[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\anaconda3\envs\lecture-datascience\lib\urllib\request.py[0m in [0;36mhttp_response[1;34m(self, request, response)[0m
[0;32m    638[0m         [1;31m# request was successfully received, understood, and accepted.[0m[1;33m[0m[1;33m[0m[1;33m[0m[0m
[0;32m    639[0m         [1;32mif[0m [1;32mnot[0m [1;33m([0m[1;36m200[0m [1;33m<=[0m [0mcode[0m [1;33m<[0m [1;36m300[0m[1;33m)[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 640[1;33m             response = self.parent.error(
[0m[0;32m    641[0m                 'http', request, response, code, msg, hdrs)
[0;32m    642[0m [1;33m[0m[0m

[1;32m~\anaconda3\envs\lecture-datascience\lib\urllib\request.py[0m in [0;36merror[1;34m(self, proto, *args)[0m
[0;32m    561[0m             [0mhttp_err[0m [1;33m=[0m [1;36m0[0m[1;33m[0m[1;33m[0m[0m
[0;32m    562[0m         [0margs[0m [1;33m=[0m [1;33m([0m[0mdict[0m[1;33m,[0m [0mproto[0m[1;33m,[0m [0mmeth_name[0m[1;33m)[0m [1;33m+[0m [0margs[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 563[1;33m         [0mresult[0m [1;33m=[0m [0mself[0m[1;33m.[0m[0m_call_chain[0m[1;33m([0m[1;33m*[0m[0margs[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    564[0m         [1;32mif[0m [0mresult[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m    565[0m             [1;32mreturn[0m [0mresult[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\anaconda3\envs\lecture-datascience\lib\urllib\request.py[0m in [0;36m_call_chain[1;34m(self, chain, kind, meth_name, *args)[0m
[0;32m    500[0m         [1;32mfor[0m [0mhandler[0m [1;32min[0m [0mhandlers[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m    501[0m             [0mfunc[0m [1;33m=[0m [0mgetattr[0m[1;33m([0m[0mhandler[0m[1;33m,[0m [0mmeth_name[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 502[1;33m             [0mresult[0m [1;33m=[0m [0mfunc[0m[1;33m([0m[1;33m*[0m[0margs[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    503[0m             [1;32mif[0m [0mresult[0m [1;32mis[0m [1;32mnot[0m [1;32mNone[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m    504[0m                 [1;32mreturn[0m [0mresult[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\anaconda3\envs\lecture-datascience\lib\urllib\request.py[0m in [0;36mhttp_error_302[1;34m(self, req, fp, code, msg, headers)[0m
[0;32m    753[0m         [0mfp[0m[1;33m.[0m[0mclose[0m[1;33m([0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0;32m    754[0m [1;33m[0m[0m
[1;32m--> 755[1;33m         [1;32mreturn[0m [0mself[0m[1;33m.[0m[0mparent[0m[1;33m.[0m[0mopen[0m[1;33m([0m[0mnew[0m[1;33m,[0m [0mtimeout[0m[1;33m=[0m[0mreq[0m[1;33m.[0m[0mtimeout[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    756[0m [1;33m[0m[0m
[0;32m    757[0m     [0mhttp_error_301[0m [1;33m=[0m [0mhttp_error_303[0m [1;33m=[0m [0mhttp_error_307[0m [1;33m=[0m [0mhttp_error_302[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\anaconda3\envs\lecture-datascience\lib\urllib\request.py[0m in [0;36mopen[1;34m(self, fullurl, data, timeout)[0m
[0;32m    529[0m         [1;32mfor[0m [0mprocessor[0m [1;32min[0m [0mself[0m[1;33m.[0m[0mprocess_response[0m[1;33m.[0m[0mget[0m[1;33m([0m[0mprotocol[0m[1;33m,[0m [1;33m[[0m[1;33m][0m[1;33m)[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m    530[0m             [0mmeth[0m [1;33m=[0m [0mgetattr[0m[1;33m([0m[0mprocessor[0m[1;33m,[0m [0mmeth_name[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 531[1;33m             [0mresponse[0m [1;33m=[0m [0mmeth[0m[1;33m([0m[0mreq[0m[1;33m,[0m [0mresponse[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    532[0m [1;33m[0m[0m
[0;32m    533[0m         [1;32mreturn[0m [0mresponse[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\anaconda3\envs\lecture-datascience\lib\urllib\request.py[0m in [0;36mhttp_response[1;34m(self, request, response)[0m
[0;32m    638[0m         [1;31m# request was successfully received, understood, and accepted.[0m[1;33m[0m[1;33m[0m[1;33m[0m[0m
[0;32m    639[0m         [1;32mif[0m [1;32mnot[0m [1;33m([0m[1;36m200[0m [1;33m<=[0m [0mcode[0m [1;33m<[0m [1;36m300[0m[1;33m)[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 640[1;33m             response = self.parent.error(
[0m[0;32m    641[0m                 'http', request, response, code, msg, hdrs)
[0;32m    642[0m [1;33m[0m[0m

[1;32m~\anaconda3\envs\lecture-datascience\lib\urllib\request.py[0m in [0;36merror[1;34m(self, proto, *args)[0m
[0;32m    561[0m             [0mhttp_err[0m [1;33m=[0m [1;36m0[0m[1;33m[0m[1;33m[0m[0m
[0;32m    562[0m         [0margs[0m [1;33m=[0m [1;33m([0m[0mdict[0m[1;33m,[0m [0mproto[0m[1;33m,[0m [0mmeth_name[0m[1;33m)[0m [1;33m+[0m [0margs[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 563[1;33m         [0mresult[0m [1;33m=[0m [0mself[0m[1;33m.[0m[0m_call_chain[0m[1;33m([0m[1;33m*[0m[0margs[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    564[0m         [1;32mif[0m [0mresult[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m    565[0m             [1;32mreturn[0m [0mresult[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\anaconda3\envs\lecture-datascience\lib\urllib\request.py[0m in [0;36m_call_chain[1;34m(self, chain, kind, meth_name, *args)[0m
[0;32m    500[0m         [1;32mfor[0m [0mhandler[0m [1;32min[0m [0mhandlers[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m    501[0m             [0mfunc[0m [1;33m=[0m [0mgetattr[0m[1;33m([0m[0mhandler[0m[1;33m,[0m [0mmeth_name[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 502[1;33m             [0mresult[0m [1;33m=[0m [0mfunc[0m[1;33m([0m[1;33m*[0m[0margs[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    503[0m             [1;32mif[0m [0mresult[0m [1;32mis[0m [1;32mnot[0m [1;32mNone[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m    504[0m                 [1;32mreturn[0m [0mresult[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\anaconda3\envs\lecture-datascience\lib\urllib\request.py[0m in [0;36mhttp_error_302[1;34m(self, req, fp, code, msg, headers)[0m
[0;32m    753[0m         [0mfp[0m[1;33m.[0m[0mclose[0m[1;33m([0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0;32m    754[0m [1;33m[0m[0m
[1;32m--> 755[1;33m         [1;32mreturn[0m [0mself[0m[1;33m.[0m[0mparent[0m[1;33m.[0m[0mopen[0m[1;33m([0m[0mnew[0m[1;33m,[0m [0mtimeout[0m[1;33m=[0m[0mreq[0m[1;33m.[0m[0mtimeout[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    756[0m [1;33m[0m[0m
[0;32m    757[0m     [0mhttp_error_301[0m [1;33m=[0m [0mhttp_error_303[0m [1;33m=[0m [0mhttp_error_307[0m [1;33m=[0m [0mhttp_error_302[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\anaconda3\envs\lecture-datascience\lib\urllib\request.py[0m in [0;36mopen[1;34m(self, fullurl, data, timeout)[0m
[0;32m    529[0m         [1;32mfor[0m [0mprocessor[0m [1;32min[0m [0mself[0m[1;33m.[0m[0mprocess_response[0m[1;33m.[0m[0mget[0m[1;33m([0m[0mprotocol[0m[1;33m,[0m [1;33m[[0m[1;33m][0m[1;33m)[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m    530[0m             [0mmeth[0m [1;33m=[0m [0mgetattr[0m[1;33m([0m[0mprocessor[0m[1;33m,[0m [0mmeth_name[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 531[1;33m             [0mresponse[0m [1;33m=[0m [0mmeth[0m[1;33m([0m[0mreq[0m[1;33m,[0m [0mresponse[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    532[0m [1;33m[0m[0m
[0;32m    533[0m         [1;32mreturn[0m [0mresponse[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\anaconda3\envs\lecture-datascience\lib\urllib\request.py[0m in [0;36mhttp_response[1;34m(self, request, response)[0m
[0;32m    638[0m         [1;31m# request was successfully received, understood, and accepted.[0m[1;33m[0m[1;33m[0m[1;33m[0m[0m
[0;32m    639[0m         [1;32mif[0m [1;32mnot[0m [1;33m([0m[1;36m200[0m [1;33m<=[0m [0mcode[0m [1;33m<[0m [1;36m300[0m[1;33m)[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 640[1;33m             response = self.parent.error(
[0m[0;32m    641[0m                 'http', request, response, code, msg, hdrs)
[0;32m    642[0m [1;33m[0m[0m

[1;32m~\anaconda3\envs\lecture-datascience\lib\urllib\request.py[0m in [0;36merror[1;34m(self, proto, *args)[0m
[0;32m    561[0m             [0mhttp_err[0m [1;33m=[0m [1;36m0[0m[1;33m[0m[1;33m[0m[0m
[0;32m    562[0m         [0margs[0m [1;33m=[0m [1;33m([0m[0mdict[0m[1;33m,[0m [0mproto[0m[1;33m,[0m [0mmeth_name[0m[1;33m)[0m [1;33m+[0m [0margs[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 563[1;33m         [0mresult[0m [1;33m=[0m [0mself[0m[1;33m.[0m[0m_call_chain[0m[1;33m([0m[1;33m*[0m[0margs[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    564[0m         [1;32mif[0m [0mresult[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m    565[0m             [1;32mreturn[0m [0mresult[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\anaconda3\envs\lecture-datascience\lib\urllib\request.py[0m in [0;36m_call_chain[1;34m(self, chain, kind, meth_name, *args)[0m
[0;32m    500[0m         [1;32mfor[0m [0mhandler[0m [1;32min[0m [0mhandlers[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m    501[0m             [0mfunc[0m [1;33m=[0m [0mgetattr[0m[1;33m([0m[0mhandler[0m[1;33m,[0m [0mmeth_name[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 502[1;33m             [0mresult[0m [1;33m=[0m [0mfunc[0m[1;33m([0m[1;33m*[0m[0margs[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    503[0m             [1;32mif[0m [0mresult[0m [1;32mis[0m [1;32mnot[0m [1;32mNone[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m    504[0m                 [1;32mreturn[0m [0mresult[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\anaconda3\envs\lecture-datascience\lib\urllib\request.py[0m in [0;36mhttp_error_302[1;34m(self, req, fp, code, msg, headers)[0m
[0;32m    753[0m         [0mfp[0m[1;33m.[0m[0mclose[0m[1;33m([0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0;32m    754[0m [1;33m[0m[0m
[1;32m--> 755[1;33m         [1;32mreturn[0m [0mself[0m[1;33m.[0m[0mparent[0m[1;33m.[0m[0mopen[0m[1;33m([0m[0mnew[0m[1;33m,[0m [0mtimeout[0m[1;33m=[0m[0mreq[0m[1;33m.[0m[0mtimeout[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    756[0m [1;33m[0m[0m
[0;32m    757[0m     [0mhttp_error_301[0m [1;33m=[0m [0mhttp_error_303[0m [1;33m=[0m [0mhttp_error_307[0m [1;33m=[0m [0mhttp_error_302[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\anaconda3\envs\lecture-datascience\lib\urllib\request.py[0m in [0;36mopen[1;34m(self, fullurl, data, timeout)[0m
[0;32m    529[0m         [1;32mfor[0m [0mprocessor[0m [1;32min[0m [0mself[0m[1;33m.[0m[0mprocess_response[0m[1;33m.[0m[0mget[0m[1;33m([0m[0mprotocol[0m[1;33m,[0m [1;33m[[0m[1;33m][0m[1;33m)[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m    530[0m             [0mmeth[0m [1;33m=[0m [0mgetattr[0m[1;33m([0m[0mprocessor[0m[1;33m,[0m [0mmeth_name[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 531[1;33m             [0mresponse[0m [1;33m=[0m [0mmeth[0m[1;33m([0m[0mreq[0m[1;33m,[0m [0mresponse[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    532[0m [1;33m[0m[0m
[0;32m    533[0m         [1;32mreturn[0m [0mresponse[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\anaconda3\envs\lecture-datascience\lib\urllib\request.py[0m in [0;36mhttp_response[1;34m(self, request, response)[0m
[0;32m    638[0m         [1;31m# request was successfully received, understood, and accepted.[0m[1;33m[0m[1;33m[0m[1;33m[0m[0m
[0;32m    639[0m         [1;32mif[0m [1;32mnot[0m [1;33m([0m[1;36m200[0m [1;33m<=[0m [0mcode[0m [1;33m<[0m [1;36m300[0m[1;33m)[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 640[1;33m             response = self.parent.error(
[0m[0;32m    641[0m                 'http', request, response, code, msg, hdrs)
[0;32m    642[0m [1;33m[0m[0m

[1;32m~\anaconda3\envs\lecture-datascience\lib\urllib\request.py[0m in [0;36merror[1;34m(self, proto, *args)[0m
[0;32m    561[0m             [0mhttp_err[0m [1;33m=[0m [1;36m0[0m[1;33m[0m[1;33m[0m[0m
[0;32m    562[0m         [0margs[0m [1;33m=[0m [1;33m([0m[0mdict[0m[1;33m,[0m [0mproto[0m[1;33m,[0m [0mmeth_name[0m[1;33m)[0m [1;33m+[0m [0margs[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 563[1;33m         [0mresult[0m [1;33m=[0m [0mself[0m[1;33m.[0m[0m_call_chain[0m[1;33m([0m[1;33m*[0m[0margs[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    564[0m         [1;32mif[0m [0mresult[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m    565[0m             [1;32mreturn[0m [0mresult[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\anaconda3\envs\lecture-datascience\lib\urllib\request.py[0m in [0;36m_call_chain[1;34m(self, chain, kind, meth_name, *args)[0m
[0;32m    500[0m         [1;32mfor[0m [0mhandler[0m [1;32min[0m [0mhandlers[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m    501[0m             [0mfunc[0m [1;33m=[0m [0mgetattr[0m[1;33m([0m[0mhandler[0m[1;33m,[0m [0mmeth_name[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 502[1;33m             [0mresult[0m [1;33m=[0m [0mfunc[0m[1;33m([0m[1;33m*[0m[0margs[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    503[0m             [1;32mif[0m [0mresult[0m [1;32mis[0m [1;32mnot[0m [1;32mNone[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m    504[0m                 [1;32mreturn[0m [0mresult[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\anaconda3\envs\lecture-datascience\lib\urllib\request.py[0m in [0;36mhttp_error_302[1;34m(self, req, fp, code, msg, headers)[0m
[0;32m    753[0m         [0mfp[0m[1;33m.[0m[0mclose[0m[1;33m([0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0;32m    754[0m [1;33m[0m[0m
[1;32m--> 755[1;33m         [1;32mreturn[0m [0mself[0m[1;33m.[0m[0mparent[0m[1;33m.[0m[0mopen[0m[1;33m([0m[0mnew[0m[1;33m,[0m [0mtimeout[0m[1;33m=[0m[0mreq[0m[1;33m.[0m[0mtimeout[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    756[0m [1;33m[0m[0m
[0;32m    757[0m     [0mhttp_error_301[0m [1;33m=[0m [0mhttp_error_303[0m [1;33m=[0m [0mhttp_error_307[0m [1;33m=[0m [0mhttp_error_302[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\anaconda3\envs\lecture-datascience\lib\urllib\request.py[0m in [0;36mopen[1;34m(self, fullurl, data, timeout)[0m
[0;32m    529[0m         [1;32mfor[0m [0mprocessor[0m [1;32min[0m [0mself[0m[1;33m.[0m[0mprocess_response[0m[1;33m.[0m[0mget[0m[1;33m([0m[0mprotocol[0m[1;33m,[0m [1;33m[[0m[1;33m][0m[1;33m)[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m    530[0m             [0mmeth[0m [1;33m=[0m [0mgetattr[0m[1;33m([0m[0mprocessor[0m[1;33m,[0m [0mmeth_name[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 531[1;33m             [0mresponse[0m [1;33m=[0m [0mmeth[0m[1;33m([0m[0mreq[0m[1;33m,[0m [0mresponse[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    532[0m [1;33m[0m[0m
[0;32m    533[0m         [1;32mreturn[0m [0mresponse[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\anaconda3\envs\lecture-datascience\lib\urllib\request.py[0m in [0;36mhttp_response[1;34m(self, request, response)[0m
[0;32m    638[0m         [1;31m# request was successfully received, understood, and accepted.[0m[1;33m[0m[1;33m[0m[1;33m[0m[0m
[0;32m    639[0m         [1;32mif[0m [1;32mnot[0m [1;33m([0m[1;36m200[0m [1;33m<=[0m [0mcode[0m [1;33m<[0m [1;36m300[0m[1;33m)[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 640[1;33m             response = self.parent.error(
[0m[0;32m    641[0m                 'http', request, response, code, msg, hdrs)
[0;32m    642[0m [1;33m[0m[0m

[1;32m~\anaconda3\envs\lecture-datascience\lib\urllib\request.py[0m in [0;36merror[1;34m(self, proto, *args)[0m
[0;32m    561[0m             [0mhttp_err[0m [1;33m=[0m [1;36m0[0m[1;33m[0m[1;33m[0m[0m
[0;32m    562[0m         [0margs[0m [1;33m=[0m [1;33m([0m[0mdict[0m[1;33m,[0m [0mproto[0m[1;33m,[0m [0mmeth_name[0m[1;33m)[0m [1;33m+[0m [0margs[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 563[1;33m         [0mresult[0m [1;33m=[0m [0mself[0m[1;33m.[0m[0m_call_chain[0m[1;33m([0m[1;33m*[0m[0margs[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    564[0m         [1;32mif[0m [0mresult[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m    565[0m             [1;32mreturn[0m [0mresult[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\anaconda3\envs\lecture-datascience\lib\urllib\request.py[0m in [0;36m_call_chain[1;34m(self, chain, kind, meth_name, *args)[0m
[0;32m    500[0m         [1;32mfor[0m [0mhandler[0m [1;32min[0m [0mhandlers[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m    501[0m             [0mfunc[0m [1;33m=[0m [0mgetattr[0m[1;33m([0m[0mhandler[0m[1;33m,[0m [0mmeth_name[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 502[1;33m             [0mresult[0m [1;33m=[0m [0mfunc[0m[1;33m([0m[1;33m*[0m[0margs[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    503[0m             [1;32mif[0m [0mresult[0m [1;32mis[0m [1;32mnot[0m [1;32mNone[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m    504[0m                 [1;32mreturn[0m [0mresult[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\anaconda3\envs\lecture-datascience\lib\urllib\request.py[0m in [0;36mhttp_error_302[1;34m(self, req, fp, code, msg, headers)[0m
[0;32m    753[0m         [0mfp[0m[1;33m.[0m[0mclose[0m[1;33m([0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0;32m    754[0m [1;33m[0m[0m
[1;32m--> 755[1;33m         [1;32mreturn[0m [0mself[0m[1;33m.[0m[0mparent[0m[1;33m.[0m[0mopen[0m[1;33m([0m[0mnew[0m[1;33m,[0m [0mtimeout[0m[1;33m=[0m[0mreq[0m[1;33m.[0m[0mtimeout[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    756[0m [1;33m[0m[0m
[0;32m    757[0m     [0mhttp_error_301[0m [1;33m=[0m [0mhttp_error_303[0m [1;33m=[0m [0mhttp_error_307[0m [1;33m=[0m [0mhttp_error_302[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\anaconda3\envs\lecture-datascience\lib\urllib\request.py[0m in [0;36mopen[1;34m(self, fullurl, data, timeout)[0m
[0;32m    529[0m         [1;32mfor[0m [0mprocessor[0m [1;32min[0m [0mself[0m[1;33m.[0m[0mprocess_response[0m[1;33m.[0m[0mget[0m[1;33m([0m[0mprotocol[0m[1;33m,[0m [1;33m[[0m[1;33m][0m[1;33m)[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m    530[0m             [0mmeth[0m [1;33m=[0m [0mgetattr[0m[1;33m([0m[0mprocessor[0m[1;33m,[0m [0mmeth_name[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 531[1;33m             [0mresponse[0m [1;33m=[0m [0mmeth[0m[1;33m([0m[0mreq[0m[1;33m,[0m [0mresponse[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    532[0m [1;33m[0m[0m
[0;32m    533[0m         [1;32mreturn[0m [0mresponse[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\anaconda3\envs\lecture-datascience\lib\urllib\request.py[0m in [0;36mhttp_response[1;34m(self, request, response)[0m
[0;32m    638[0m         [1;31m# request was successfully received, understood, and accepted.[0m[1;33m[0m[1;33m[0m[1;33m[0m[0m
[0;32m    639[0m         [1;32mif[0m [1;32mnot[0m [1;33m([0m[1;36m200[0m [1;33m<=[0m [0mcode[0m [1;33m<[0m [1;36m300[0m[1;33m)[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 640[1;33m             response = self.parent.error(
[0m[0;32m    641[0m                 'http', request, response, code, msg, hdrs)
[0;32m    642[0m [1;33m[0m[0m

[1;32m~\anaconda3\envs\lecture-datascience\lib\urllib\request.py[0m in [0;36merror[1;34m(self, proto, *args)[0m
[0;32m    561[0m             [0mhttp_err[0m [1;33m=[0m [1;36m0[0m[1;33m[0m[1;33m[0m[0m
[0;32m    562[0m         [0margs[0m [1;33m=[0m [1;33m([0m[0mdict[0m[1;33m,[0m [0mproto[0m[1;33m,[0m [0mmeth_name[0m[1;33m)[0m [1;33m+[0m [0margs[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 563[1;33m         [0mresult[0m [1;33m=[0m [0mself[0m[1;33m.[0m[0m_call_chain[0m[1;33m([0m[1;33m*[0m[0margs[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    564[0m         [1;32mif[0m [0mresult[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m    565[0m             [1;32mreturn[0m [0mresult[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\anaconda3\envs\lecture-datascience\lib\urllib\request.py[0m in [0;36m_call_chain[1;34m(self, chain, kind, meth_name, *args)[0m
[0;32m    500[0m         [1;32mfor[0m [0mhandler[0m [1;32min[0m [0mhandlers[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m    501[0m             [0mfunc[0m [1;33m=[0m [0mgetattr[0m[1;33m([0m[0mhandler[0m[1;33m,[0m [0mmeth_name[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 502[1;33m             [0mresult[0m [1;33m=[0m [0mfunc[0m[1;33m([0m[1;33m*[0m[0margs[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    503[0m             [1;32mif[0m [0mresult[0m [1;32mis[0m [1;32mnot[0m [1;32mNone[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m    504[0m                 [1;32mreturn[0m [0mresult[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\anaconda3\envs\lecture-datascience\lib\urllib\request.py[0m in [0;36mhttp_error_302[1;34m(self, req, fp, code, msg, headers)[0m
[0;32m    742[0m             if (visited.get(newurl, 0) >= self.max_repeats or
[0;32m    743[0m                 len(visited) >= self.max_redirections):
[1;32m--> 744[1;33m                 raise HTTPError(req.full_url, code,
[0m[0;32m    745[0m                                 self.inf_msg + msg, headers, fp)
[0;32m    746[0m         [1;32melse[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m

[1;31mHTTPError[0m: HTTP Error 301: The HTTP server returned a redirect error that would lead to an infinite loop.
The last 30x error message was:
Moved Permanently
HTTPError: HTTP Error 301: The HTTP server returned a redirect error that would lead to an infinite loop.
The last 30x error message was:
Moved Permanently

